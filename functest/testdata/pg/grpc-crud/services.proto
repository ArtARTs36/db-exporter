syntax = "proto3";

package org.service;

import "google/protobuf/timestamp.proto";

option optimize_for = SPEED;

// Service for working with users.
service UsersService {
  // Get all users.
  rpc List(ListUsersRequest) returns (ListUsersResponse) {};

  // Get a user.
  rpc Get(GetUserRequest) returns (GetUserResponse) {};

  // Delete a user.
  rpc Delete(DeleteUserRequest) returns (DeleteUserResponse) {};

  // Create a new user.
  rpc Create(CreateUserRequest) returns (CreateUserResponse) {};

  // Patch an existing user.
  rpc Patch(PatchUserRequest) returns (PatchUserResponse) {};
}

message User {
  int64 id = 1;
  string name = 2;
  Mood current_mood = 3;
  google.protobuf.Timestamp created_at = 4;
}

message ListUsersRequest {}

message ListUsersResponse {
  repeated User items = 1;
}

message GetUserRequest {
  int64 id = 1;
}

message GetUserResponse {
  User User = 1;
}

message DeleteUserRequest {
  int64 id = 1;
}

message DeleteUserResponse {}

message CreateUserRequest {
  int64 id = 1;
  string name = 2;
  Mood current_mood = 3;
}

message CreateUserResponse {
  User User = 1;
}

message PatchUserRequest {
  int64 id = 1;
  string name = 2;
  Mood current_mood = 3;
}

message PatchUserResponse {
  User User = 1;
}

enum Mood {
  MOOD_UNDEFINED = 0;
  MOOD_OK = 1;
  MOOD_HAPPY = 2;
}